{"data":[{"title":"惠普光影精灵4在Arch Linux下使用Optimus Manager配置双显卡","url":"/posts/archlinux-pavilion-gaming-laptop/","content":"\n\n自从高中毕业至今这台笔记本用了将近两年，已经记不清当初为什么买了这台笔记本，刚买来电脑第一次装Arch Linux时遇到了一些坑，不过大多数的问题Google折腾一会或随着后续的软件更新基本上就都解决了，唯独配置双显卡这个问题在用了两年后才算是找到了比较满意的解决方法（大概是），尽管现在这电脑已经停产了，就算有人买了这台电脑也不一定会拿他装Arch Linux，不过我还是打算把这个问题的解决过程记录一下（本篇讲的方法应该是适用于大多数N卡+i卡的笔记本电脑的，只是有些细节不一样），以备我后续重装系统时有个参考。\n\n\n\n \n\n\nconst ap0 = new APlayer ({\n    container: document.getElementById(\"aplayer0\"),\n    theme: \"#33363b\",\n    fixed: false,\n    listFolded: false,\n    listMaxHeight: false,\n    lrcType: false,\n    mini: false,\n    volume: 0.7,\n    order: \"list\",\n    loop: \"all\",\n    autoplay: false,\n    audio: [{\n        name: \"Kaleidoscope\",\n        artist: \"Vicetone / Grace Grundy\",\n        url: \"https://music.starry-s.me/music/560e_0558_060b_adc45c798222ffa86a4d1a0cb6ddf18f.m4a\",\n        cover: \"https://music.starry-s.me/music/cover/18671906464338403.jpg\",\n        lrc: \"\",\n        theme: \"#A26208\"\n    }]\n});\n  \n\n先描述一下踩坑经过\n\n本段略微有些废话，可以跳过\n\n记得在刚买来这台笔记本（2018年夏），Linux内核还没升到5.0的时候，使用live CD装系统时会遇到lspci卡死，关机的时候会卡死的问题，查系统日记都是一堆ACPI的报错。当时网上查了一下大概是内核和驱动一些bug，没找到解决办法（补充：是nouveau的问题，内核参数添加modprobe.blacklist=nouveau禁用可以暂时解决问题），Google到论坛的帖子说是在关机/重启发生卡死时直接长按电源关机就好了，对电脑没有影响（找不到搜的回答了）\n装完系统后安装显卡驱动时想通过Bumblebee + bbswitch切换双显卡，于是装了Gnome然后照着wiki配置完Bumblebee后重启电脑直接死机（补充：应该是bbswitch导致的ACPI锁死）。\n经过多次重装系统的折磨后，发现只装Bumblebee不装bbswitch不systemctl enable bumblebeed.service时，能正常开机，然后之前遇到的两个问题也莫名其妙就好了，即系统重启关机不会卡死，lspci也正常了（迷）\n之后，在不装bbswitch的情况下，systemctl enable bumblebeed再用optirun和primusrun这种方式用独显运行程序都没有问题。\n当时以为电脑不装bumblebee的话就没法正常关机，于是就一直用着bumblebee切换双显卡，玩游戏性能比Windows下差一点（貌似是显卡驱动的锅？），别的都没啥问题。\n今年年初买了一块拓展屏想搞双显示器，本来显示器应该插上HDMI直接就能用的，但是因为这电脑的HDMI走的独显输出，Bumblebee不能直接用，wiki上教的创建个intel的虚拟输出啥的方法有试过但是没成功过（不知道是配置文件写错了还是啥问题），于是又Google了一下后disable并卸了Bumblebee改用NVIDIA Optimus 只使用独显的方式，这样双显示器倒是能用了，但是如果笔记本只用电池没连着拓展屏的时候还跑着独显这也太费电了。\n所以最后找到了能切换显卡的Optimus Manager。\n安装过程\n照着Wiki和Optimus Manager的README。首先安装好显卡驱动相关的软件，如果有Bumblebee的话使用systemctl disable bumblebeed停用。\n首先清除（记得备份）/etc/X11/xorg.conf.d/下的配置文件，并删掉（记得备份）/etc/X11/xorg.conf（如果有的话），因为Optimus Manager会自动生成配置文件存放到/etc/X11/xorg.conf.d/里面，所以建议安装前把显示配置相关的文件都清除掉。\n使用Arch Linux CN源或者通过AUR Helper安装optimus-manager。\n1\n2\n3\n4# Arch Linux CN\n$ sudo pacman -S optimus-manager\n# AUR\n$ yay -S optimus-manager\n因为我用的Gnome，参照README中说的卸载掉gdm并安装gdm-primeAUR。（国内下载源代码的速度极慢建议挂梯子，或者挂梯子克隆GDM的代码到~/.cache/yay/gdm-prime/gdm下。）\n修改/etc/gdm/custom.conf，移除WaylandEnable=false一行前面的#禁用Wayland而使用X。\n修改配置文件\n1$ sudo cp /usr/share/optimus-manager.conf /etc/optimus-manager/optimus-manager.conf\n不要编辑/usr/share/下的文件，编辑/etc/optimus-manager/optimus-manager.conf，将切换方式设为switching=none，不推荐使用bbswitch（见后续第一条），设置pci_power_control=yes让PCI Power Management切换显卡。\n之后根据需求来修改开机自动选择显卡：\n1\n2\n3startup_mode=auto\nstartup_auto_battery_mode=intel\nstartup_auto_extpower_mode=nvidia\n这里我设置的是用电池时使用集成显卡，用电源时使用独显。\n最后贴一下全部的配置文件，除了上述的几处修改以外其他均为默认值，仅供参考。\n\n# Leave blank for the default (the above command will not be run).\nDPI=96\n\n# If you're running an updated version of xorg-server (let's say to get PRIME Render offload enabled),\n# the nvidia driver may not load because of an ABI version mismatch. Setting this flag to &quot;yes&quot;\n# will allow the loading of the nvidia driver.\nignore_abi=no\n\n# Set to yes if you want to use optimus-manager with external Nvidia GPUs (experimental)\nallow_external_gpus=no\n\n# Comma-separated list of Nvidia-specific options to apply.\n# Available options :\n# - overclocking : enable CoolBits in the Xorg configuration, which unlocks clocking options\n#   in the Nvidia control panel. Note: does not work in hybrid mode.\n# - triple_buffer : enable triple buffering.\noptions=overclocking\n\" data-info=\"language-conf\" data-lang=\"conf\" class=\"code-block highlight hljs\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109[optimus]\n\n# This parameter defines the method used to power switch the Nvidia card. See the documentation\n# for a complete description of what each value does. Possible values :\n#\n# - nouveau : load the nouveau module on the Nvidia card.\n# - bbswitch : power off the card using the bbswitch module (requires the bbswitch dependency).\n# - acpi_call : try various ACPI method calls to power the card on and off (requires the acpi_call dependency)\n# - custom: use custom scripts at /etc/optimus-manager/nvidia-enable.sh and /etc/optimus-manager/nvidia-disable.sh\n# - none : do not use an external module for power management. For some laptop models it's preferable to\n#          use this option in combination with pci_power_control (see below).\nswitching=none\n\n# Enable PCI power management in Intel mode.\n# This option is incompatible with acpi_call and bbswitch, so it will be ignored in those cases.\npci_power_control=yes\n\n# Remove the Nvidia card from the PCI bus.\n# May prevent crashes caused by power switching.\n# Ignored if switching=nouveau or switching=bbswitch.\npci_remove=yes\n\n# Reset the Nvidia card at the PCI level before reloading the nvidia module.\n# Ensures the card is in a fresh state before reloading the nvidia module.\n# May fix some switching issues. Possible values :\n#\n# - no : does not perform any reset\n# - function_level : perform a light \"function-level\" reset\n# - hot_reset : perform a \"hot reset\" of the PCI bridge. ATTENTION : this method messes with the hardware\n#         directly, please read the online documentation of optimus-manager before using it.\n#         Also, it will perform a PCI remove even if pci_remove=no.\n#\npci_reset=no\n\n# Automatically log out the current desktop session when switching GPUs.\n# This feature is currently supported for the following DE/WM :\n# KDE Plasma, GNOME, XFCE, LXDE, Deepin, i3, Openbox, AwesomeWM, bspwm\n# If this option is disabled or you use a different desktop environment,\n# GPU switching only becomes effective at the next graphical session login.\nauto_logout=yes\n\n# GPU mode to use at computer startup. Possible values: nvidia, intel, hybrid, auto\n# \"auto\" is a special mode that auto-detects if the computer is running on battery\n# and selects a proper GPU mode. See the other options below.\nstartup_mode=auto\n# GPU mode to select when startup_mode=auto and the computer is running on battery.\n# Possible values: nvidia, intel, hybrid\nstartup_auto_battery_mode=intel\n# GPU mode to select when startup_mode=auto and the computer is running on external power.\n# Possible values: nvidia, intel, hybrid\nstartup_auto_extpower_mode=nvidia\n\n\n[intel]\n\n# Driver to use for the Intel GPU. Possible values : modesetting, intel\n# To use the intel driver, you need to install the package \"xf86-video-intel\".\ndriver=modesetting\n\n# Acceleration method (corresponds to AccelMethod in the Xorg configuration).\n# Only applies to the intel driver.\n# Possible values : sna, xna, uxa\n# Leave blank for the default (no option specified)\naccel=\n\n# Enable TearFree option in the Xorg configuration.\n# Only applies to the intel driver.\n# Possible values : yes, no\n# Leave blank for the default (no option specified)\ntearfree=\n\n# DRI version. Possible values : 2, 3\nDRI=3\n\n# Whether or not to enable modesetting for the nouveau driver.\n# Does not affect modesetting for the Intel GPU driver !\n# This option only matters if you use nouveau as the switching backend.\nmodeset=yes\n\n[nvidia]\n\n# Whether or not to enable modesetting. Required for PRIME Synchronization (which prevents tearing).\nmodeset=yes\n\n# Whether or not to enable the NVreg_UsePageAttributeTable option in the Nvidia driver.\n# Recommended, can cause poor CPU performance otherwise.\nPAT=yes\n\n# DPI value. This will be set using the Xsetup script passed to your login manager.\n# It will run the command\n# xrandr --dpi &lt;DPI&gt;\n# Leave blank for the default (the above command will not be run).\nDPI=96\n\n# If you're running an updated version of xorg-server (let's say to get PRIME Render offload enabled),\n# the nvidia driver may not load because of an ABI version mismatch. Setting this flag to \"yes\"\n# will allow the loading of the nvidia driver.\nignore_abi=no\n\n# Set to yes if you want to use optimus-manager with external Nvidia GPUs (experimental)\nallow_external_gpus=no\n\n# Comma-separated list of Nvidia-specific options to apply.\n# Available options :\n# - overclocking : enable CoolBits in the Xorg configuration, which unlocks clocking options\n#   in the Nvidia control panel. Note: does not work in hybrid mode.\n# - triple_buffer : enable triple buffering.\noptions=overclocking\n\n食用方法\noptimus-manager --switch nvidia切换到独显（nvidia）；\noptimus-manager --switch intel切换到集显（intel）\n其他用法参见Usage。\n注意：\n\n切换显卡的过程中会自动注销登录，所以记得保存并关掉电脑正在运行的程序。\n\n你可以在配置文件中修改auto_logout=false禁止自动注销以手动注销切换显卡。\n\n\nOthers\n\n之所以不推荐使用bbswitch是因为容易遇到ACPI锁死的问题，参考Wiki，需要添加内核参数acpi_osi=! acpi_osi=\"Windows 2009\"或acpi_osi=\"!Windows 2015\"启动，如果你遇到了锁死可以通过开机时在启动加载器界面编辑添加内核参数来正常进入系统，如果你用的是efistub或者没办法编辑内核参数的话就只能用live CD救你的电脑了。\n\n如果用不了lspci，电脑没法正常关机的话，是nouveau的问题，可添加内核参数modprobe.blacklist=nouveau禁用。\n\n因为前几天改配置文件时又踩了一遍锁死的坑，于是拿着相机内存卡（我U盘放学校寝室里拿不出来了）做了最新的(2020.07.01)live CD救砖时，惊喜的发现在live环境下lspci和关机都不会卡死了，貌似是新版内核驱动修复了nouveau的问题 应该是我在几个月前升级了电脑的Bios解决的这个问题，因为我又新下了一个旧的live CD，关机和lspci也都正常了（算了不管到底是怎么回事了，能用就行\n\n在切换显卡自动注销后，gdm界面不会自动加载出来而是一直黑屏，这时需要手动切换到tty2再切回tty1才能加载出来，貌似是gdm-prime的问题。\n\n\n\n\n    \n\n"},{"title":"小米路由器3G折腾之刷OpenWrt记录","url":"/posts/Xiaomi_Miwifi_3G/","content":"\n\n本篇恢复自旧博客，由于创作时间过于久远，作者已无法保证其准确性，内容仅供参考。\n\n生命不息，折腾不止...\n\n\n\n \n\n\nconst ap0 = new APlayer ({\n    container: document.getElementById(\"aplayer0\"),\n    theme: \"#33363b\",\n    fixed: false,\n    listFolded: false,\n    listMaxHeight: false,\n    lrcType: false,\n    mini: false,\n    volume: 0.7,\n    order: \"list\",\n    loop: \"all\",\n    autoplay: false,\n    audio: [{\n        name: \"Mallow Flower\",\n        artist: \"Otokaze\",\n        url: \"https://music.starry-s.me/music/969d_ef88_965d_f8693c4f0a65db94a9cc0ebb9be2bd06.mp3\",\n        cover: \"https://music.starry-s.me/music/cover/781752767371058.jpg\",\n        lrc: \"\",\n        theme: \"#EFCE82\"\n    }]\n});\n  \n\n准备工作\n你至少需要以下工具：\n\n路由器本体\n网线\n一个已格式化为FAT/FAT32格式的U盘，用来刷开发者固件和ssh激活工具\n一根怼Reset钮的针\nWindows用户需要一个SSH软件（例如：putty）\n小米路由器客户端，用来绑定你的小米账号\n\nSSH到路由器\n\n路由器重启后指示灯会变为蓝色，若变为红色则为刷机失败。\n\n安装开发者固件并开启SSH权限：\n\n在MiWiFi下载页面下载所需要的路由器开发者固件（ROM -&gt; ROM for R3G开发版）,命名为miwifi.bin。\n\n路由器断电，将下载好的开发者固件放入U盘插入路由器USB接口，捅住reset扭接上电源后待指示灯为黄色闪烁时松开，数分钟后路由器会自动重启，此过程不要乱动路由器。\n\n小米路由器客户端登陆小米账号绑定路由器设备，此过程需要路由器联网。\n\nMiWiFi开放平台登陆小米账号下载ssh激活工具命名为miwifi_ssh.bin，记下root密码。\n\n操作方式同第二步骤，刷入ssh激活工具。\n\n\nSSH到路由器:\n\nWindows系统用putty，ip为191.168.31.1，用户名：root，密码为下载激活ssh工具时记下的密码。\n\nUnix/Linux系统终端执行：ssh root@191.168.31.1\n\n\n刷入Bootloader（推荐/可选）\n\n该步骤可选是因为Breed不支持直接刷入Openwrt固件，可参考这篇帖子，不过为了防止变砖，还是推荐刷Breed。\n\nBreed原作者为hackpascal，此处为下载地址，文件名为breed-mt7621-xiaomi-r3g.bin\n第一种方法是ssh到路由器后通过wget下载breed文件再刷入（需要确保路由器联网），下载地址为https所以需要加上--no-check-certificate参数。\n1\n2\n3cd /tmp\nwget --no-check-certificate https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin -O breed.bin\nmtd -r write breed.bin Bootloader\n另一种方法是将breed通过U盘拷贝到路由器再刷入。\n1\n2\n3mkdir /tmp/sdcard\nmount /dev/sda1 /tmp/sdcard\nmtd -r write /tmp/sdcard/breed.bin Bootloader\n路由器刷写完毕后会自动重启，在写入Breed的过程中不要动路由器。\n刷机\n下载所需固件：\n\ntuna镜像站的OpenWrt下载地址：https://mirrors.tuna.tsinghua.edu.cn/lede/releases/\n\n官方下载地址: https://downloads.openwrt.org/releases/\n\n\n使用Breed的刷机方法\n按照hackpascal的说法是：\n\n如果kernel0存在kernel1不存在，那么启动kernel0\n如果kernel1存在kernel0不存在，那么启动kernel1\n如果kernel0和kernel1都存在，那么检查环境变量 xiaomi.r3g.bootfw 的值，如果存在且值为 2，那么启动kernel1，否则启动kernel0\n\n简单来说就是：路由器有两个内核，需要在Breed里设置环境变量让路由器启动kernel1。\n\n刷入Openwrt固件到Kernel1\n1\n2mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-kernel1.bin kernel1\nmtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-rootfs0.bin rootfs0\n\n路由器断电，捅住reset按钮后通电，待指示灯变为蓝色闪烁后用网线连接路由器到电脑，浏览器打开网址192.168.1.1，进入Breed界面。\n\n在环境变量编辑里添加xiaomi.r3g.bootfw字段，值为2,保存后重启即可进入Openwrt。\n\n\n没有刷入Breed的刷机方法\n\nOpenWrt官网提供的教程是在没有刷入Breed的情况下刷入OpenWrt固件的。\n\nssh到路由器，导入固件后刷机。\n1\n2\n3\n4\n5\n6mtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-kernel1.bin kernel1\nmtd write openwrt-18.06.2-ramips-mt7621-mir3g-squashfs-rootfs0.bin rootfs0\nnvram set flag_try_sys1_failed=1\nnvram commit\n\nreboot\n\nOthers\n\n如果刷了Breed + Pandavan/PandoraBox后想换回OpenWrt的话，首先在Breed中刷回小米路由器开发版的官方固件，然后SSH到路由器按照上述的使用Breed的刷机方再刷机。\n\nUSB3.0会对路由器的2.4G频段信号造成干扰。\n\nOpenWrt默认语言为英文，可安装luci-i18n-base-zh-cn,luci-i18n-base-zh-tw安装简体/繁体中文。\n\nOpenWrt-disk可拓展更多功能。\n\n为优化软件包安装速度，可将opkg源改为国内：\nLuCI -&gt; System -&gt; Software -&gt; Configuration 中将 Distribution feeds 的http://downloads.openwrt.org替换为http://mirrors.tuna.tsinghua.edu.cn/lede。\n\nOpenWrt可安装软件包libustream-openssl libustream-mbedtls解决wget无法访问https服务器问题。\n然后建议把opkg源能改为https的都改为https。\n\n\n"},{"title":"Everything is based on “Hello World”.","url":"/posts/hello-world/","content":"\n\n\n \n\n\nconst ap0 = new APlayer ({\n    container: document.getElementById(\"aplayer0\"),\n    theme: \"#33363b\",\n    fixed: false,\n    listFolded: false,\n    listMaxHeight: false,\n    lrcType: false,\n    mini: false,\n    volume: 0.7,\n    order: \"list\",\n    loop: \"all\",\n    autoplay: false,\n    audio: [{\n        name: \"遊園施設\",\n        artist: \"帆足圭吾\",\n        url: \"https://music.starry-s.me/music/540b_075e_0453_cae9f8037d04c81f84993977b01792ec.m4a\",\n        cover: \"https://music.starry-s.me/music/cover/18710389371705314.jpg\",\n        lrc: \"\",\n        theme: \"#67B577\"\n    }]\n});\n \n\n\n\n\n\nint main(int argc, char *argv[])\n{\n    printf(&quot;Hello World!\\n&quot;);\n    return 0;\n}\n\" data-info=\"language-C\" data-lang=\"C\" class=\"code-block highlight hljs\">1\n2\n3\n4\n5\n6\n7#include &lt;stdio.h&gt;\nint main(int argc, char *argv[])\n{\n    printf(\"Hello World!\\n\");\n    return 0;\n}\n\nSTARRY-S' Blog\n"}]}